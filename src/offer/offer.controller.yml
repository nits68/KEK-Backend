# LINK ./offer.controller.ts#getAllOffer
# ANCHOR[id=getAllOffer]
/offers:
    get:
        tags:
            - Offers
        summary: Az összes felajánlás lekérdezése
        description: A végpont a felajánlásokat kérdezi le, a tábla összes adatával tér vissza
        responses:
            "200":
                description: OK.
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Offer"
                headers:
                    x-total-count:
                        description: A felajánlások száma
                        schema:
                            type: integer
                            example: 2000
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./offer.controller.ts#createOffer
    # ANCHOR[id=createOffer]
    post:
        tags:
            - Offers
        summary: Új felajánlás létrehozása
        description: Új felajánlás létrehozása.
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Offer"
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
                headers:
                    x-total-count:
                        description: A felajánlások száma
                        schema:
                            type: number
                            example: 2000
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

# LINK ./offer.controller.ts#getOfferById
# ANCHOR[id=getOfferById]
/offers/{id}:
    get:
        tags:
            - Offers
        summary: Egy felajánlás lekérdezése
        description: Felajánlások lekérdezése elsődleges-kulcs (id) alapján
        parameters:
            - name: id
              in: path
              description: A felajánlás ObjectId azonosítója
              schema:
                  type: string
                  example: "bbbb00000000000000000001"
              required: true
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./offer.controller.ts#modifyOffer
    # ANCHOR[id=modifyOffer]
    patch:
        tags:
            - Offers
        summary: Egy felajánlás módosítása
        description: Az elsődleges-kulccsal (id) kijelölt felajánlás módosítása
        parameters:
            - name: id
              in: path
              description: A felajánlás ObjectId azonosítója
              schema:
                  type: string
                  example: "bbbb00000000000000000999"
              required: true
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Offer"
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

    # LINK ./offer.controller.ts#deleteOffer
    # ANCHOR[id=deleteOffer]
    delete:
        tags:
            - Offers
        summary: Egy felajánlás törlése
        description: Az elsődleges-kulccsal (id) kijelölt felajánlás törlése.<br>
            A végpont törli a offer hivatkozását a users kollekcióból is.<br>
            Csak akkor megy végbe a törlés, ha sikeres a users kollekció módosítása is.<br>
            A művelet tranzakciókezelést használ.
        parameters:
            - name: id
              in: path
              description: A törlendő felajánlás ObjectId azonosítója
              schema:
                  type: string
                  example: "bbbb00000000000000000999"
              required: true
        responses:
            "200":
                description: OK
                headers:
                    x-total-count:
                        description: A felajánlások száma a törlés után
                        schema:
                            type: number
                            example: 200
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

/offers/myoffer/{id}:
    # LINK ./offer.controller.ts#modifyMyOffer
    # ANCHOR[id=modifyMyOffer]
    patch:
        tags:
            - Offers
        summary: Saját felajánlás módosítása
        description: Az elsődleges-kulccsal (id) kijelölt SAJÁT felajánlás módosítása
        parameters:
            - name: id
              in: path
              description: A felajánlás ObjectId azonosítója
              schema:
                  type: string
                  example: "bbbb00000000000000000999"
              required: true
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Offer"
        responses:
            "200":
                description: OK
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Offer"
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

/offers/{offset}/{limit}/{sortingfield}/{filter}:
    # LINK ./offer.controller.ts#getPaginatedOffers
    # ANCHOR[id=getPaginatedOffers]

    get:
        tags:
            - Offers
        summary: Az összes felajánlások lekérdezése szűréssel és lapozással
        description: A végpont az összes felajánlásokat kérdezi le, megadott szűrőfeltétellel és lapozással. A szűrőfeltétel több szöveges mezőre érvényes, köztük "vagy" logikai kapcsolat van. A rendezés a megadott mező szerint történik növekvő rendben, ha kötőjellel indul a mezőnév, akkor csökkenő sorrendben. A szűrőfeltételnek megfelelő rekorodok számát a végpont az "x-total-count" változóban küldi vissza a válasz fejlécében. Ez kell a korrekt lapozáshoz a kliens oldalon. Szűrés nélküli működéshez a "filter" paraméterbe csillag (*) karaktert kell írni.
        parameters:
            - name: offset
              in: path
              description: Offset
              schema:
                  type: number
                  example: 0
              required: true
            - name: limit
              in: path
              description: Limit
              schema:
                  type: number
                  example: 10
              required: true
            - name: sortingfield
              in: path
              description: sortingfield
              schema:
                  type: string
                  example: "product.product_name"
              required: true
            - name: filter
              in: path
              description: filter
              schema:
                  type: string
                  example: "gábor"
              required: true
        responses:
            "200":
                description: OK.
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Offer"
                headers:
                    x-total-count:
                        description: A felajánlások száma
                        schema:
                            type: integer
                            example: 2000
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"

/offers/active/{offset}/{limit}/{sortingfield}/{filter}:
    # LINK ./offer.controller.ts#getPaginatedActiveOffers
    # ANCHOR[id=getPaginatedActiveOffers]

    get:
        tags:
            - Offers
        summary: Az aktuális felajánlások lekérdezése szűréssel és lapozással
        description: A végpont az aktuális (offer_end == null) felajánlásokat kérdezi le, megadott szűrőfeltétellel és lapozással. A szűrőfeltétel több szöveges mezőre érvényes, köztük "vagy" logikai kapcsolat van. A rendezés a megadott mező szerint történik növekvő rendben, ha kötőjellel indul a mezőnév, akkor csökkenő sorrendben. A szűrőfeltételnek megfelelő rekorodok számát a végpont az "x-total-count" változóban küldi vissza a válasz fejlécében. Ez kell a korrekt lapozáshoz a kliens oldalon. Szűrés nélküli működéshez a "filter" paraméterbe csillag (*) karaktert kell írni.
        parameters:
            - name: offset
              in: path
              description: Offset
              schema:
                  type: number
                  example: 0
              required: true
            - name: limit
              in: path
              description: Limit
              schema:
                  type: number
                  example: 10
              required: true
            - name: sortingfield
              in: path
              description: sortingfield
              schema:
                  type: string
                  example: "product.product_name"
              required: true
            - name: filter
              in: path
              description: filter
              schema:
                  type: string
                  example: "gábor"
              required: true
        responses:
            "200":
                description: OK.
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/Offer"
                headers:
                    x-total-count:
                        description: A felajánlások száma
                        schema:
                            type: integer
                            example: 2000
            "4XX":
                description: Hiba
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Error"
